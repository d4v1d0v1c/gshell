VAR int freq,apid1,apid2,pcrpid1,pcrpid2,type,ad,cp,mute,ret,tmpret,tmp,cntr
VAR string para
MAIN

% MSP initialization part ************************************************

%abp_msp_analog_power_up
rfr 0x00071824
wtr 0x00071848 0x00000002
wtr 0x00071848 0x00008000

%route Vol1 and Vol2 to headphones
rfr 0x00071824
wtr 0x00071848 0x00000041
wtr 0x00071848 0x00006263

%route Vol1 and Vol2 to speakers
rfr 0x00071824
wtr 0x00071848 0x0000003f
wtr 0x00071848 0x00006263

%set source for Vol1 to MAIN L
rfr 0x00071824
wtr 0x00071848 0x00008052
wtr 0x00071848 0x0000003a

%set source for Vol2 to MAIN R
rfr 0x00071824
wtr 0x00071848 0x00008053
wtr 0x00071848 0x0000003b

%Vol1 set
rfr 0x00071824
wtr 0x00071848 0x00000052
wtr 0x00071848 0

%Vol2 set
rfr 0x00071824
wtr 0x00071848 0x00000053
wtr 0x00071848 0

%Master Vol set
rfr 0x00071824
wtr 0x00071848 0x00000050
wtr 0x00071848 0

%Enable SPDIF1 in, source SPDIF_IN
rfr 0x00071824
wtr 0x00071848 0x00000004
wtr 0x00071848 0x00008000

%Enable SPDIF2 in, source SPDIF_IN
rfr 0x00071824
wtr 0x00071848 0x00000004
wtr 0x00071848 0x00008000

%Rote DTV spdif out to SPDIF Out pin
rfr 0x00071824
wtr 0x00071848 0x00000003
wtr 0x00071848 0x00000600

% end of MSP initialization part *********************************************

% common part with tuning and in selection    
    ret <- 0
    para <- getenv "#1"    
    tmp <- integer para
    if tmp=0
      open in:0      
		open dmx:0
		route in:0 dmx:0
		tmpret <- start dmx:0
		ret <- add ret tmpret
	 	tmpret <- start in:0
	 	ret <- add ret tmpret
    else
      freq <- tmp
      open fe:1
      open in:1
      open dmx:0
      route fe:1 in:1
	   route in:1 dmx:0
	   ret <- start fe:1 "ter:[freq]"      
	   tmpret <- start dmx:0
	   ret <- add ret tmpret
	 	tmpret <- start in:1
	 	ret <- add ret tmpret
    endif
            
    print "freq=[freq]"
% end of common part

% get audio1 PID    
    para <- getenv "#2"
    if para=""
      apid1 <- 650
    else
      apid1 <- integer para
    endif

% get audio2 PID    
    para <- getenv "#3"
    if para=""
      apid2 <- 650
    else
      apid2 <- integer para
    endif
    
% get pcr1 PID    
    para <- getenv "#4"
    if para=""
      pcrpid1 <- 128
    else
      pcrpid1 <- integer para
    endif

% get pcr2 PID    
    para <- getenv "#5"
    if para=""
      pcrpid2 <- 128
    else
      pcrpid2 <- integer para
    endif
    
% get decoder type (standard)
    para <- getenv "#6"   
    if para="AUTO"    
      type <- 1
    endif
    if para="PCM"
      type <- 2
    endif
    if para="MPEG"
      type <- 32
    endif
    if para="AC3"
      type <- 64
    endif
    if para="DTS"
      type <- 128        
    endif
    if para=""
      type <- 32
    endif
    
% get AD setting    
    para <- getenv "#7"
    if para=""
      ad <- 0
    else
      ad <- integer para
    endif
    
% get copy parameter
    para <- getenv "#8"
    if para=""
      cp <- 0
    else
      cp <- integer para
    endif

% get mute parameter
    para <- getenv "#9"
    if para=""
      mute <- 0
    else
      mute <- integer para
    endif
    
% start audio on MAIN
	 
	 open dmx:0.0
	 open dmx:0.1
	 open aud:0
	 
	 if cp>0
	 	open sout:0
	 	clone aud:0 sout:0
	 endif
	 	 	 	 	 
	 apply aud:0 "ad:[ad]"
	 apply aud:0 sync:1
	 apply aud:0 "mode:[type]"
	 apply aud:0 "mute:[mute]"	
	 	 
	 route dmx:0.0 aud:0
	 
	 cntr <- 0
	 
	 while cntr<20
	 
	 	%setup first channel
	 	setpid dmx:0.0 "pid:[apid1]"	 	 
	 	tmpret <- start aud:0	 
	 	ret <- add ret tmpret
	 	if cp>0
	 	  tmpret <- start sout:0
	 	  ret <- add ret tmpret
	 	endif
	 		 	
	 	pcr dmx:0.1 "pid:[pcrpid1]"
	 	tmpret <- start dmx:0.1
	 	ret <- add ret tmpret
	 	tmpret <- start dmx:0.0
	 	ret <- add ret tmpret	 
	 	
	 	% playback...
	 	wait 3000
	 	
	 	% stop decoding
	 	if cp>0
	 	  stop sout:0	 	  
	 	endif	 	
	 	stop aud:0
	 	
	 	wait 200
	 	
	 	%setup second channel
	 	setpid dmx:0.0 "pid:[apid2]"	 	 
	 	tmpret <- start aud:0	 
	 	ret <- add ret tmpret
	 	if cp>0
	 	  tmpret <- start sout:0
	 	  ret <- add ret tmpret
	 	endif
	 		 	
	 	pcr dmx:0.1 "pid:[pcrpid2]"
	 	tmpret <- start dmx:0.1
	 	ret <- add ret tmpret
	 	tmpret <- start dmx:0.0
	 	ret <- add ret tmpret	 
	 	
	 	% playback...
	 	wait 3000
	 	
	 	% stop decoding
	 	if cp>0
	 	  stop sout:0	 	  
	 	endif	 	
	 	stop aud:0
	 	
	 	wait 200
	 	
	 	cntr <- add cntr 1
	 	
	 wend
	 	 
	 print "ret=[ret]"
	 if ret<0
       exit -1
    else
       exit 1
    endif	         	 
    
END
